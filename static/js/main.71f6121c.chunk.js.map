{"version":3,"sources":["Person.js","Planet.js","Starship.js","Vehicle.js","img/starwars.png","Api.js","App.js","index.js"],"names":["Person","props","people","Card","border","bg","Header","name","Body","Text","gender","height","eye_color","hair_color","skin_color","Planet","planetary","population","terrain","climate","Starship","starships","manufacturer","hyperdrive_rating","cost_in_credits","crew","passengers","cargo_capacity","Vehicle","vehicles","model","max_atmosphering_speed","vehicle_class","Api","React","useState","person","setPersons","planet","setPlanets","starship","setStarships","vehicle","setVehicles","Jumbotron","style","backgroundImage","starwars","backgroundSize","Container","Row","color","CardGroup","Button","onClick","evt","preventDefault","fetch","then","response","json","data","results","keys","Object","console","log","ppl","Math","floor","random","length","planets","planetKeys","plnt","vehicleKeys","vhcle","starshipKeys","strshp","searchApi","variant","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71f6121c.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nfunction Person (props) {\n\n    const {people} = props\n\n    return (\n       <>\n            <Card border=\"dark\" bg=\"light\">\n                <Card.Header><b>You are {people.name}!</b></Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        <ul>\n                            <li>Gender: {people.gender}</li>\n                            <li>Height: {people.height}</li>\n                            <li>Eye Color: {people.eye_color}</li>\n                            <li>Hair Color: {people.hair_color}</li>\n                            <li>Skin Color: {people.skin_color}</li>\n                        </ul>\n                        \n                    </Card.Text>\n                </Card.Body>\n            </Card>\n       </>\n    )\n}\n\nexport default Person;","import Card from 'react-bootstrap/Card'\n\nfunction Planet(props) {\n\n    const {planetary} = props\n\n    return (\n        <>\n            <Card border=\"dark\" bg=\"light\">\n                <Card.Header><b>You live on Planet {planetary.name}</b></Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        <ul>\n                            <li>Has a population of {planetary.population} residents</li><br/>\n                            <li>The planet has {planetary.terrain} terrain</li><br/>\n                            <li>Has a {planetary.climate} climate</li><br/>\n                        </ul>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </>\n    )\n\n}\n\nexport default Planet;","import Card from 'react-bootstrap/Card'\n\nfunction Starship (props) {\n\n    const {starships} = props\n\n    return (\n        <>\n            <Card border=\"dark\" bg=\"light\">\n                <Card.Header><b>You own the {starships.name} starship</b></Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        <ul>\n                            <li>Created by {starships.manufacturer}, with a {starships.hyperdrive_rating} hyperdrive</li><br/>\n                            <li>Worth {starships.cost_in_credits} credits</li><br/>\n                            <li>Holds a crew of {starships.crew}</li>\n                            <li>Holds {starships.passengers} passengers</li><br/>\n                            <li>Capable of carrying {starships.cargo_capacity} loads</li>\n                        </ul>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\nexport default Starship;","import Card from 'react-bootstrap/Card'\n\nfunction Vehicle (props) {\n\n    const {vehicles} = props\n\n    return (\n        <>\n            <Card border=\"dark\" bg=\"light\">\n                <Card.Header><b>You're riding on the {vehicles.name}</b></Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        <ul>\n                            <li>The {vehicles.model} model is worth {vehicles.cost_in_credits} credits</li><br/>\n                            <li>Holds a crew of {vehicles.crew}</li>\n                            <li>Holds {vehicles.passengers} passengers</li><br/>\n                            <li>Capable of carrying {vehicles.cargo_capacity} loads and has a max speed of {vehicles.max_atmosphering_speed}</li><br/>\n                            <li>Is a {vehicles.vehicle_class} vehicle type</li>\n                        </ul>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\nexport default Vehicle;","export default __webpack_public_path__ + \"static/media/starwars.eaeadd46.png\";","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Person from \"./Person\";\nimport Planet from \"./Planet\";\nimport Starship from './Starship';\nimport Vehicle from './Vehicle';\nimport starwars from './img/starwars.png';\n\nfunction Api () {\n\n    // Establishes state in component\n    const [person, setPersons] = React.useState([]);\n    const [planet, setPlanets] = React.useState([]);\n    const [starship, setStarships] = React.useState([]);\n    const [vehicle, setVehicles] = React.useState([]);\n    // const [profile, setProfile] = React.useState({savedPerson: \"\", savedPlanet: \"\", savedStarship: \"\", savedVehicle: \"\"});\n\n    function searchApi(evt) {\n        // Automatically fetches api on load\n        evt.preventDefault()\n        // Fetch from people url\n        fetch('https://swapi.dev/api/people')\n        // Returns a promise and parses it as json object\n        .then(response => response.json())\n        // Returns another promise that we can actually handle\n        .then((data) => {\n            let people = data.results\n\n            // Create an array of elements whose strings correspond to the enumerable properties found upon the object\n            const keys = Object.keys(people)\n            console.log(keys)\n            // Generates random index based on number of keys\n            const randIndex = Math.floor(Math.random() * keys.length)\n            // Select a key from the array of keys using the random index\n            const randKey = keys[randIndex]\n            //Use the key to get its corresponding person from people\n            const ppl = people[randKey]\n            // Updates the state\n            setPersons(ppl)\n\n            // Fetch from planets url\n            return fetch('https://swapi.dev/api/planets')\n        })\n        .then(response => response.json())\n        .then((data) => {\n\n            let planets = data.results\n\n            const planetKeys = Object.keys(planets)\n            const randIndex2 = Math.floor(Math.random() * planetKeys.length)\n            const randKey2 = planetKeys[randIndex2]\n            const plnt = planets[randKey2]\n            setPlanets(plnt)\n\n            // Fetch from Vehicle url\n            return fetch('https://swapi.dev/api/vehicles') \n        })\n        .then(response => response.json())\n        .then((data) => {\n\n            let vehicles = data.results\n\n            const vehicleKeys = Object.keys(vehicles)\n            const randIndex3 = Math.floor(Math.random() * vehicleKeys.length)\n            const randKey3 = vehicleKeys[randIndex3]\n            const vhcle = vehicles[randKey3]\n            setVehicles(vhcle)\n\n\n            // Fetch from Starship url\n            return fetch('https://swapi.dev/api/starships')\n        })\n        .then(response => response.json())\n        .then((data) => {\n\n            let starships = data.results\n\n            const starshipKeys = Object.keys(starships)\n            const randIndex4 = Math.floor(Math.random() * starshipKeys.length)\n            const randKey4 = starshipKeys[randIndex4]\n            const strshp = starships[randKey4]\n            setStarships(strshp)\n        })\n    }\n\n    // function saveProfile(evt) {\n    //     evt.preventDefault()\n    //     console.log(\"test\")\n\n    //     setProfile({\n    //         savedPerson: person,\n    //         savedPlanet: planet,\n    //         savedStarship: starship,\n    //         savedVehicle: vehicle\n    //     })\n\n    //     console.log(profile)\n\n    // }\n    \n    \n    return (\n        <>\n            <Jumbotron style={{ backgroundImage: `url(${starwars})`, backgroundSize: 'contain' }}></Jumbotron>\n            <Container>\n                <Row>\n                    <p style={{color: \"white\"}}>\n                        Randomly generate your Star Wars profile!\n                    </p>\n                </Row>\n                <Row>\n                    <CardGroup>\n                        <Person people={person}/>\n                        <Planet planetary={planet}/>\n                        <Starship starships={starship}/>\n                        <Vehicle vehicles={vehicle}/>\n                    </CardGroup>\n                </Row>\n                <Row>\n                    <Button onClick={(evt) => {searchApi(evt)}} variant=\"dark\">Toggle this profile</Button>\n                </Row>\n                {/* Future Feature\n                <Row>\n                    <Button onClick={(evt) => {saveProfile(evt)}} variant=\"dark\">Save this profile!</Button>\n                </Row> */}\n            </Container>\n            \n        </>\n    )\n}\n\nexport default Api;","import React from 'react';\nimport Api from './Api';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Api />\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}